[{"/home/david/Desktop/ArtistPortfolio_react/frontend/src/index.js":"1","/home/david/Desktop/ArtistPortfolio_react/frontend/src/App.js":"2","/home/david/Desktop/ArtistPortfolio_react/frontend/src/screens/LoginScreen/index.js":"3","/home/david/Desktop/ArtistPortfolio_react/frontend/src/screens/HomeScreen/index.js":"4","/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/index.js":"5","/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/reducers/index.js":"6","/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/reducers/userReducers.js":"7","/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/reducers/blogReducers.js":"8","/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/constants/userConstants.js":"9","/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/constants/blogConstants.js":"10","/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/actions/blogActions.js":"11"},{"size":223,"mtime":1626554427348,"results":"12","hashOfConfig":"13"},{"size":601,"mtime":1626986036545,"results":"14","hashOfConfig":"13"},{"size":162,"mtime":1626548187270,"results":"15","hashOfConfig":"13"},{"size":2006,"mtime":1627124933075,"results":"16","hashOfConfig":"13"},{"size":518,"mtime":1627068554968,"results":"17","hashOfConfig":"13"},{"size":484,"mtime":1627061661737,"results":"18","hashOfConfig":"13"},{"size":547,"mtime":1626988472071,"results":"19","hashOfConfig":"13"},{"size":2983,"mtime":1627061423650,"results":"20","hashOfConfig":"13"},{"size":198,"mtime":1626987882007,"results":"21","hashOfConfig":"13"},{"size":931,"mtime":1627058798494,"results":"22","hashOfConfig":"13"},{"size":3711,"mtime":1627069462104,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"sbbnhu",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},"/home/david/Desktop/ArtistPortfolio_react/frontend/src/index.js",[],["48","49"],"/home/david/Desktop/ArtistPortfolio_react/frontend/src/App.js",[],"/home/david/Desktop/ArtistPortfolio_react/frontend/src/screens/LoginScreen/index.js",[],"/home/david/Desktop/ArtistPortfolio_react/frontend/src/screens/HomeScreen/index.js",[],"/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/index.js",[],"/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/reducers/index.js",[],"/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/reducers/userReducers.js",[],"/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/reducers/blogReducers.js",[],"/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/constants/userConstants.js",[],"/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/constants/blogConstants.js",[],"/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/actions/blogActions.js",["50","51"],"import axios from \"axios\"\nimport {\n    GET_BLOGS_REQUEST,\n    GET_BLOGS_SUCCESS,\n    GET_BLOGS_FAIL,\n    CREATE_BLOG_REQUEST,\n    CREATE_BLOG_SUCCESS,\n    CREATE_BLOG_FAIL,\n    CREATE_BLOG_RESET,\n    BLOG_DETAILS_REQUEST,\n    BLOG_DETAILS_SUCCESS,\n    BLOG_DETAILS_FAIL,\n    UPDATE_BLOG_REQUEST,\n    UPDATE_BLOG_SUCCESS,\n    UPDATE_BLOG_FAIL,\n    UPDATE_BLOG_RESET,\n    DELETE_BLOG_REQUEST,\n    DELETE_BLOG_SUCCESS,\n    DELETE_BLOG_FAIL,\n} from \"../constants/blogConstants\"\n\nexport const getBlogs = (pageNumber = \"\", pageSize = \"\") => async (\n    dispatch\n) => {\n    try {\n        dispatch({ type: GET_BLOGS_REQUEST })\n\n        const { data } = await axios.get(\n            `/api/blog?pageNumber=${pageNumber}&pageSize=${pageSize}`\n        )\n        dispatch({ type: GET_BLOGS_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch ({\n            type: GET_BLOGS_FAIL,\n            payload:\n            error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const getBlogDetails = (id) => async (\n    dispatch\n) => {\n    try {\n        dispatch({ type: BLOG_DETAILS_REQUEST })\n\n        const { data } = await axios.get(\n            `/api/blog/${id}`)\n        dispatch({ type: BLOG_DETAILS_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch ({\n            type: BLOG_DETAILS_FAIL,\n            payload:\n            error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const createBlog = () => async (\n    dispatch, getState\n) => {\n    try {\n        dispatch({ type: CREATE_BLOG_REQUEST })\n\n        const { userLogin: userInfo } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.post(\"/api/blog\", {}, config)\n\n        dispatch({ type: CREATE_BLOG_SUCCESS, payload: data,})\n    } catch (error) {\n        dispatch ({\n            type: CREATE_BLOG_FAIL,\n            payload:\n            error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\nexport const updateBlog = (blog) => async (\n    dispatch, getState\n) => {\n    try {\n        dispatch({ type: UPDATE_BLOG_REQUEST })\n\n        const {userLogin: { userInfo }} = getState()\n        \n        const config = { \n            headers: {\n                \"Content-Type\" : \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/blog/${blog._id}`, blog, config)\n        dispatch({ type: UPDATE_BLOG_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch ({\n            type: UPDATE_BLOG_FAIL,\n            payload:\n            error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const deleteBlog = (id) => async (\n    dispatch, getState\n) => {\n    try {\n        dispatch({ type: DELETE_BLOG_REQUEST })\n\n        const {userLogin: { userInfo }} = getState()\n        \n        const config = { \n            headers: {\n                \"Content-Type\" : \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.delete(`/api/blog/${id}`, config)\n        dispatch({ type: DELETE_BLOG_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch ({\n            type: DELETE_BLOG_FAIL,\n            payload:\n            error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":9,"column":5,"nodeType":"58","messageId":"59","endLine":9,"endColumn":22},{"ruleId":"56","severity":1,"message":"60","line":16,"column":5,"nodeType":"58","messageId":"59","endLine":16,"endColumn":22},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'CREATE_BLOG_RESET' is defined but never used.","Identifier","unusedVar","'UPDATE_BLOG_RESET' is defined but never used.","no-global-assign","no-unsafe-negation"]