{"ast":null,"code":"import axios from \"axios\";\nimport { GET_BLOGS_REQUEST, GET_BLOGS_SUCCESS, GET_BLOGS_FAIL, CREATE_BLOG_REQUEST, CREATE_BLOG_SUCCESS, CREATE_BLOG_FAIL, CREATE_BLOG_RESET, BLOG_DETAILS_REQUEST, BLOG_DETAILS_SUCCESS, BLOG_DETAILS_FAIL, UPDATE_BLOG_REQUEST, UPDATE_BLOG_SUCCESS, UPDATE_BLOG_FAIL, UPDATE_BLOG_RESET, DELETE_BLOG_REQUEST, DELETE_BLOG_SUCCESS, DELETE_BLOG_FAIL } from \"../constants/blogConstants\";\nexport const getBlogs = (pageNumber = \"\", pageSize = \"\") => async dispatch => {\n  try {\n    dispatch({\n      type: GET_BLOGS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/blog?pageNumber=${pageNumber}&pageSize=${pageSize}`);\n    dispatch({\n      type: GET_BLOGS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_BLOGS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getBlogDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: BLOG_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/blog/${id}`);\n    dispatch({\n      type: BLOG_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BLOG_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createBlog = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_BLOG_REQUEST\n    });\n    const {\n      userLogin: userInfo\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/blog\", {}, config);\n    dispatch({\n      type: CREATE_BLOG_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_BLOG_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateBlog = blog => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UPDATE_BLOG_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/blog/${blog._id}`, blog, config);\n    dispatch({\n      type: UPDATE_BLOG_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_BLOG_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteBlog = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: DELETE_BLOG_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/blog/${id}`, config);\n    dispatch({\n      type: DELETE_BLOG_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_BLOG_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/david/Desktop/ArtistPortfolio_react/frontend/src/store/actions/blogActions.js"],"names":["axios","GET_BLOGS_REQUEST","GET_BLOGS_SUCCESS","GET_BLOGS_FAIL","CREATE_BLOG_REQUEST","CREATE_BLOG_SUCCESS","CREATE_BLOG_FAIL","CREATE_BLOG_RESET","BLOG_DETAILS_REQUEST","BLOG_DETAILS_SUCCESS","BLOG_DETAILS_FAIL","UPDATE_BLOG_REQUEST","UPDATE_BLOG_SUCCESS","UPDATE_BLOG_FAIL","UPDATE_BLOG_RESET","DELETE_BLOG_REQUEST","DELETE_BLOG_SUCCESS","DELETE_BLOG_FAIL","getBlogs","pageNumber","pageSize","dispatch","type","data","get","payload","error","response","message","getBlogDetails","id","createBlog","getState","userLogin","userInfo","config","headers","Authorization","token","post","updateBlog","blog","put","_id","deleteBlog","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport {\n    GET_BLOGS_REQUEST,\n    GET_BLOGS_SUCCESS,\n    GET_BLOGS_FAIL,\n    CREATE_BLOG_REQUEST,\n    CREATE_BLOG_SUCCESS,\n    CREATE_BLOG_FAIL,\n    CREATE_BLOG_RESET,\n    BLOG_DETAILS_REQUEST,\n    BLOG_DETAILS_SUCCESS,\n    BLOG_DETAILS_FAIL,\n    UPDATE_BLOG_REQUEST,\n    UPDATE_BLOG_SUCCESS,\n    UPDATE_BLOG_FAIL,\n    UPDATE_BLOG_RESET,\n    DELETE_BLOG_REQUEST,\n    DELETE_BLOG_SUCCESS,\n    DELETE_BLOG_FAIL,\n} from \"../constants/blogConstants\"\n\nexport const getBlogs = (pageNumber = \"\", pageSize = \"\") => async (\n    dispatch\n) => {\n    try {\n        dispatch({ type: GET_BLOGS_REQUEST })\n\n        const { data } = await axios.get(\n            `/api/blog?pageNumber=${pageNumber}&pageSize=${pageSize}`\n        )\n        dispatch({ type: GET_BLOGS_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch ({\n            type: GET_BLOGS_FAIL,\n            payload:\n            error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const getBlogDetails = (id) => async (\n    dispatch\n) => {\n    try {\n        dispatch({ type: BLOG_DETAILS_REQUEST })\n\n        const { data } = await axios.get(\n            `/api/blog/${id}`)\n        dispatch({ type: BLOG_DETAILS_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch ({\n            type: BLOG_DETAILS_FAIL,\n            payload:\n            error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const createBlog = () => async (\n    dispatch, getState\n) => {\n    try {\n        dispatch({ type: CREATE_BLOG_REQUEST })\n\n        const { userLogin: userInfo } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.post(\"/api/blog\", {}, config)\n\n        dispatch({ type: CREATE_BLOG_SUCCESS, payload: data,})\n    } catch (error) {\n        dispatch ({\n            type: CREATE_BLOG_FAIL,\n            payload:\n            error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\n\n\nexport const updateBlog = (blog) => async (\n    dispatch, getState\n) => {\n    try {\n        dispatch({ type: UPDATE_BLOG_REQUEST })\n\n        const {userLogin: { userInfo }} = getState()\n        \n        const config = { \n            headers: {\n                \"Content-Type\" : \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/blog/${blog._id}`, blog, config)\n        dispatch({ type: UPDATE_BLOG_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch ({\n            type: UPDATE_BLOG_FAIL,\n            payload:\n            error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const deleteBlog = (id) => async (\n    dispatch, getState\n) => {\n    try {\n        dispatch({ type: DELETE_BLOG_REQUEST })\n\n        const {userLogin: { userInfo }} = getState()\n        \n        const config = { \n            headers: {\n                \"Content-Type\" : \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.delete(`/api/blog/${id}`, config)\n        dispatch({ type: DELETE_BLOG_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch ({\n            type: DELETE_BLOG_FAIL,\n            payload:\n            error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}