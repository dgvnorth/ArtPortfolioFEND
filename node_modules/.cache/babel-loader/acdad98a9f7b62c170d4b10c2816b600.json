{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/ArtistPortfolio_react/frontend/src/screens/AdminScreen/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react'; // Assets\n\nimport classes from \"./AdminScreen.module.css\"; // Redux\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CREATE_IMAGE_RESET } from '../../store/constants/imageConstants';\nimport { createImage, deleteImage, getImages } from '../../store/actions/imageActions';\nimport { logout } from '../../store/actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminScreen = props => {\n  _s();\n\n  const {\n    history\n  } = props;\n  const dispatch = useDispatch(); // Check user login\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // Image State\n\n  const imageCreate = useSelector(state => state.imageCreate);\n  const {\n    success: successcreateImage,\n    image: createdImage\n  } = imageCreate;\n  const imageList = useSelector(state => state.imageList);\n  const {\n    images: gallery\n  } = imageList;\n  const imageDelete = useSelector(state => state.imageDelete);\n  const {\n    loading: loadingImageDelete,\n    success: successImageDelete\n  } = imageDelete;\n\n  const createImageHandler = () => {};\n\n  const logoutHandler = () => {};\n\n  const deleteImageHandler = () => {};\n\n  const editImageHandler = () => {};\n\n  useEffect(() => {\n    dispatch({\n      type: CREATE_IMAGE_RESET\n    }); //check for user Info\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login');\n    }\n\n    dispatch(getImages(null, 100));\n\n    if (successcreateImage) {\n      history.push(`/admin/image/${createdImage._id}/edit`);\n    }\n  }, [userInfo, dispatch, history, successcreateImage, createdImage, successImageDelete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.screen_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.controls_container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Wellcome \", userInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createImageHandler,\n          children: \"Add an image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logoutHandler,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.gallery_container,\n      children: !gallery ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"...loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this) : gallery.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.imageDetail_container,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.src[0],\n          alt: item.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteImageHandler(item._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editImageHandler(item._id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminScreen, \"UmgmTDN2obJrbFUGingxYJPMX5Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = AdminScreen;\nexport default AdminScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminScreen\");","map":{"version":3,"sources":["/home/david/Desktop/ArtistPortfolio_react/frontend/src/screens/AdminScreen/index.js"],"names":["React","useEffect","classes","useDispatch","useSelector","CREATE_IMAGE_RESET","createImage","deleteImage","getImages","logout","AdminScreen","props","history","dispatch","userLogin","state","userInfo","imageCreate","success","successcreateImage","image","createdImage","imageList","images","gallery","imageDelete","loading","loadingImageDelete","successImageDelete","createImageHandler","logoutHandler","deleteImageHandler","editImageHandler","type","isAdmin","push","_id","screen_container","controls_container","name","gallery_container","map","item","idx","imageDetail_container","alt","src"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,0BAApB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,sCAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAqD,kCAArD;AACA,SAASC,MAAT,QAAuB,iCAAvB;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAME,QAAQ,GAAGV,WAAW,EAA5B,CAF2B,CAI3B;;AACA,QAAMW,SAAS,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAACE,IAAAA;AAAD,MAAaF,SAAnB,CAN2B,CAQ3B;;AACA,QAAMG,WAAW,GAAGb,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACE,WAAlB,CAA/B;AACA,QAAM;AAACC,IAAAA,OAAO,EAAEC,kBAAV;AAA8BC,IAAAA,KAAK,EAAEC;AAArC,MAAqDJ,WAA3D;AAEA,QAAMK,SAAS,GAAGlB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACO,SAAlB,CAA7B;AACA,QAAM;AAACC,IAAAA,MAAM,EAAEC;AAAT,MAAoBF,SAA1B;AAEA,QAAMG,WAAW,GAAGrB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACU,WAAlB,CAA/B;AACA,QAAM;AAACC,IAAAA,OAAO,EAAEC,kBAAV;AAA8BT,IAAAA,OAAO,EAAEU;AAAvC,MAA6DH,WAAnE;;AAEA,QAAMI,kBAAkB,GAAG,MAAM,CAAE,CAAnC;;AAEA,QAAMC,aAAa,GAAG,MAAM,CAAE,CAA9B;;AAEA,QAAMC,kBAAkB,GAAG,MAAM,CAAE,CAAnC;;AAEA,QAAMC,gBAAgB,GAAG,MAAM,CAAE,CAAjC;;AAEA/B,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ,CAAC;AAACoB,MAAAA,IAAI,EAAE5B;AAAP,KAAD,CAAR,CADY,CAEZ;;AACA,QAAI,CAACW,QAAD,IAAa,CAACA,QAAQ,CAACkB,OAA3B,EAAoC;AAChCtB,MAAAA,OAAO,CAACuB,IAAR,CAAa,QAAb;AACH;;AAEDtB,IAAAA,QAAQ,CAACL,SAAS,CAAC,IAAD,EAAO,GAAP,CAAV,CAAR;;AAEA,QAAIW,kBAAJ,EAAwB;AACpBP,MAAAA,OAAO,CAACuB,IAAR,CAAc,gBAAed,YAAY,CAACe,GAAI,OAA9C;AACH;AACJ,GAZQ,EAYN,CAACpB,QAAD,EAAWH,QAAX,EAAqBD,OAArB,EAA8BO,kBAA9B,EAAkDE,YAAlD,EAAgEO,kBAAhE,CAZM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAE1B,OAAO,CAACmC,gBAAxB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEnC,OAAO,CAACoC,kBAAxB;AAAA,8BACI;AAAA,gCAActB,QAAQ,CAACuB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACG;AAAQ,UAAA,OAAO,EAAEV,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAQ,UAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAACsC,iBAAxB;AAAA,gBACK,CAAChB,OAAD,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAGGA,OAAO,CAACiB,GAAR,CAAY,CAACC,IAAD,EAAOC,GAAP,kBACR;AAAe,QAAA,SAAS,EAAEzC,OAAO,CAAC0C,qBAAlC;AAAA,gCACI;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,GAAG,EAAEH,IAAI,CAACI,GAAL,CAAS,CAAT,CAAV;AAAuB,UAAA,GAAG,EAAEJ,IAAI,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAE,MAAMd,kBAAkB,CAACW,IAAI,CAACN,GAAN,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,OAAO,EAAE,MAAMJ,gBAAgB,CAACU,IAAI,CAACN,GAAN,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAUO,GAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAJR;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAjED;;GAAMjC,W;UAEeP,W,EAGCC,W,EAIEA,W,EAGFA,W,EAGEA,W;;;KAflBM,W;AAmEN,eAAeA,WAAf","sourcesContent":["import React, {useEffect} from 'react'\n\n// Assets\nimport classes from \"./AdminScreen.module.css\"\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CREATE_IMAGE_RESET } from '../../store/constants/imageConstants';\nimport { createImage, deleteImage, getImages  } from '../../store/actions/imageActions';\nimport { logout } from '../../store/actions/userActions'\n\n\nconst AdminScreen = (props) => {\n    const { history } = props\n    const dispatch = useDispatch()\n\n    // Check user login\n    const userLogin = useSelector((state) => state.userLogin)\n    const {userInfo} = userLogin\n\n    // Image State\n    const imageCreate = useSelector((state) => state.imageCreate)\n    const {success: successcreateImage, image: createdImage} = imageCreate\n\n    const imageList = useSelector((state) => state.imageList)\n    const {images: gallery} = imageList\n\n    const imageDelete = useSelector((state) => state.imageDelete)\n    const {loading: loadingImageDelete, success: successImageDelete} = imageDelete\n\n    const createImageHandler = () => {}\n\n    const logoutHandler = () => {}\n\n    const deleteImageHandler = () => {}\n\n    const editImageHandler = () => {}\n\n    useEffect(() => {\n        dispatch({type: CREATE_IMAGE_RESET})\n        //check for user Info\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        dispatch(getImages(null, 100))\n\n        if (successcreateImage) {\n            history.push(`/admin/image/${createdImage._id}/edit`)\n        }\n    }, [userInfo, dispatch, history, successcreateImage, createdImage, successImageDelete])\n\n    return (\n        <div className={classes.screen_container}>\n            <div className={classes.controls_container}>\n                <h1>Wellcome {userInfo.name}</h1>\n                <div>\n                   <button onClick={createImageHandler}>Add an image</button> \n                   <button onClick={logoutHandler}>Logout</button>\n                </div>\n            </div>   \n            <div className={classes.gallery_container}>\n                {!gallery ? (\n                    <div>...loading...</div>\n                ) : (\n                    gallery.map((item, idx) => (\n                        <div key={idx} className={classes.imageDetail_container}>\n                            <p>{item.alt}</p>\n                            <img src={item.src[0]} alt={item.alt}/>\n                            <button onClick={() => deleteImageHandler(item._id)}>Delete</button>\n                            <button onClick={() => editImageHandler(item._id)}>Edit</button>\n                        </div>\n                    ))\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default AdminScreen\n"]},"metadata":{},"sourceType":"module"}